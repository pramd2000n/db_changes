create or replace PROCEDURE XDP_P_CUST_BUSI_LOGIC_VALIDATE
( 
    LOAN_REQ_ID         IN NUMBER,
    --NIC                 IN VARCHAR2,
    --RELATION            IN NUMBER,
    VALIDATION_SEQ_ID   OUT NUMBER,
    FINAL_STATUS        OUT NUMBER
) IS
/***************************************************************
* Purpose		     : To validate business logic in origination for green channel accounts
* Author		     : Chathura Boralugoda
* Create Date	     : Friday, Apr 10, 2020	
***************************************************************/
RELATION NUMBER := 1;
REC_EXISTS VARCHAR2(10):= 'EXISTS';
Rowsprocessed NUMBER := 0;
var_ProcessStatusID NUMBER;
STATUS_FAIL NUMBER;
STATUS_REFER NUMBER;
STATUS_PASS NUMBER;
STATUS NUMBER;

BEGIN

SELECT SEQ_VALIDATION_STATUS.NEXTVAL 
INTO   var_ProcessStatusID
FROM   dual;

DECLARE
var_ErrorMessage VARCHAR2(1000);
record_history  VARCHAR2(2000);
M_RULE_ID NUMBER;
M_RULE_MANDATORY VARCHAR2(10);
M_RULE_STATUS VARCHAR2(10);
M_PRODUCT_CATEGORY VARCHAR2(20);
S_RULE_NAME VARCHAR2(50);
S_RULE_NAME_DISPLAY VARCHAR2(50);
S_RULE_ID NUMBER;

APPLICANT_ID NUMBER;
O_PRODUCT NUMBER;
O_HEARDFROM NUMBER;
O_NIC_OLD VARCHAR2(50);
O_NIC_NEW VARCHAR2(50);
G_NIC_OLD VARCHAR2(50);
G_NIC_NEW VARCHAR2(50);
G_APP_STATUS VARCHAR2(50);
G_APP_AMOUNT NUMBER;
O_REQ_AMOUNT NUMBER;
G_DPD NUMBER;
O_TOPUP VARCHAR2(50);
G_GREEN_CHANNEL_ID NUMBER;

SP_CUSID NUMBER;
SP_NIC VARCHAR2(50);
SP_LMID NUMBER;
SP_APPID NUMBER;
SP_BAL NUMBER; 
SP_EXIST NUMBER := 1;

GR1_CUSID NUMBER;
GR1_NIC VARCHAR2(50);
GR1_LMID NUMBER;
GR1_APPID NUMBER;
GR1_DPD NUMBER := 0;
GR1_EXIST NUMBER := 1;

GR2_CUSID NUMBER;
GR2_NIC VARCHAR2(50);
GR2_LMID NUMBER;
GR2_APPID NUMBER;
GR2_DPD NUMBER := 0;
GR2_EXIST NUMBER := 1;

GR3_CUSID NUMBER;
GR3_NIC VARCHAR2(50);
GR3_LMID NUMBER;
GR3_APPID NUMBER;
GR3_DPD NUMBER := 0;
GR3_EXIST NUMBER := 1;

GR4_CUSID NUMBER;
GR4_NIC VARCHAR2(50);
GR4_LMID NUMBER;
GR4_APPID NUMBER;
GR4_DPD NUMBER := 0;
GR4_EXIST NUMBER := 1;

GR5_CUSID NUMBER;
GR5_NIC VARCHAR2(50);
GR5_LMID NUMBER;
GR5_APPID NUMBER;
GR5_DPD NUMBER := 0;
GR5_EXIST NUMBER := 1;

CURSOR get_valid_sub_rules IS
SELECT *
FROM TBL_RULE_SUB
WHERE IRULE_MASTER_ID = 16
AND VRULE_STATUS = 'ACTIVE';

 BEGIN 
    BEGIN
    SELECT IRULE_ID,VRULE_MANDATORY,VRULE_STATUS,VPRODUCT_CATEGORY
    INTO M_RULE_ID,M_RULE_MANDATORY,M_RULE_STATUS,M_PRODUCT_CATEGORY
    FROM TBL_RULE_MASTER
    WHERE VRULE_NAME ='CUST_BUSINESS_LOGIC_VALIDATE';
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        M_RULE_STATUS := 'INACTIVE';
    END;    
    --Main applicant and loan details
    BEGIN
    SELECT B.STATUS,B.PRE_APPROVE_AMT,LRD.IREQAMOUNT,C.VNIC,C.VNIC_OLD,AM.VOLDNIC,AM.VNEWNIC,AM.IID,
    (SELECT NVL(MAX(D.IDPD),0) FROM LOAN_MASTER L
        INNER JOIN TBL_DELINQUENCY D ON D.ILOANMASTER_ID = L.ILOAN_MASTER_ID
        WHERE L.ICUSTORMER_ID = C.ICUSTORMER_ID AND D.IACTIONED = 0), TL.ITOPUPELIGIBILITY, LR.IPRODUCTID,LR.IHEARDFROMID,LR.GREEN_CHANNEL_ID
    INTO G_APP_STATUS,G_APP_AMOUNT,O_REQ_AMOUNT,G_NIC_NEW,G_NIC_OLD,O_NIC_OLD,O_NIC_NEW,APPLICANT_ID,G_DPD,O_TOPUP,O_PRODUCT,O_HEARDFROM,G_GREEN_CHANNEL_ID
    FROM LOAN_REQUEST LR
    INNER JOIN LOAN_REQUEST_DETAIL LRD ON LRD.ILOANREQUESTID = LR.IID
    INNER JOIN APPLICANT_MAIN AM ON AM.IID = LR.IAPPLICANTID
    LEFT OUTER JOIN ACCOUNT_ORIGINATION B ON B.IID = LR.GREEN_CHANNEL_ID
    LEFT OUTER JOIN LOAN_MASTER LM ON LM.ILOAN_MASTER_ID = B.LOAN_MASTER_ID
    LEFT OUTER JOIN CUSTOMER_INFO C ON C.ICUSTORMER_ID = LM.ICUSTORMER_ID
    LEFT OUTER JOIN TOPUP_LOAN TL ON TL.ILOANREQUESTID = LR.IID AND TL.IPUBLISH = 1
    WHERE LR.IID = LOAN_REQ_ID
    AND LR.IPUBLISH=1
    AND AM.IPUBLISH = 1
    AND LRD.IPUBLISH = 1
    AND ROWNUM = 1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        REC_EXISTS := 'NOT EXISTS';
    END;

        --spouse 1
    BEGIN
    SELECT T2.ICUSTORMER_ID,T2.VOLDNIC,T2.ILOAN_MASTER_ID,T2.IID,T2.BALANCE
    INTO SP_CUSID,SP_NIC,SP_LMID,SP_APPID,SP_BAL
    FROM (SELECT T1.ICUSTORMER_ID,T1.VOLDNIC,T1.ILOAN_MASTER_ID,T1.IID,T1.BALANCE
     FROM(SELECT C.ICUSTORMER_ID,AM.VOLDNIC,LM.ILOAN_MASTER_ID,AM.IID,
         (SELECT NVL(SUM(letx.letx_bal),0)
              FROM tbl_l_letx_info letx
                WHERE letx.iloan_master_id  = lm.iloan_master_id
                  AND letx.letx_type NOT IN ('Z')) AS BALANCE
        FROM APPLICANT_RELATION AR
        INNER JOIN APPLICANT_MAIN AM ON AM.IID = AR.IAPPLICANTID
        LEFT OUTER JOIN CUSTOMER_INFO C ON C.VNIC = AM.VOLDNIC
        LEFT OUTER JOIN LOAN_MASTER LM ON LM.ICUSTORMER_ID = C.ICUSTORMER_ID
        WHERE AR.ILOANREQUESTID = LOAN_REQ_ID 
        AND AR.IRELATIONSTATUSID = 2
        AND AR.IPUBLISH=1
        AND AM.IPUBLISH = 1)T1 
        ORDER BY T1.BALANCE DESC)T2
        WHERE ROWNUM=1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        SP_EXIST := 0;
    END;

    --guarantor 1
    BEGIN
    SELECT T2.ICUSTORMER_ID,T2.VOLDNIC,T2.ILOAN_MASTER_ID,T2.IID,T2.DPD
    INTO GR1_CUSID,GR1_NIC,GR1_LMID,GR1_APPID,GR1_DPD
        FROM(SELECT T1.ICUSTORMER_ID,T1.VOLDNIC,T1.ILOAN_MASTER_ID,T1.IID,T1.DPD
        FROM(SELECT C.ICUSTORMER_ID,AM.VOLDNIC,LM.ILOAN_MASTER_ID,AM.IID,NVL(D.IDPD,0) AS DPD
        FROM APPLICANT_RELATION AR
        INNER JOIN APPLICANT_MAIN AM ON AM.IID = AR.IAPPLICANTID
        LEFT OUTER JOIN CUSTOMER_INFO C ON C.VNIC = AM.VOLDNIC
        LEFT OUTER JOIN LOAN_MASTER LM ON LM.ICUSTORMER_ID = C.ICUSTORMER_ID
        LEFT OUTER JOIN TBL_DELINQUENCY D ON D.ILOANMASTER_ID = LM.ILOAN_MASTER_ID AND D.IACTIONED = 0 AND D.IDPD > 0
        WHERE AR.ILOANREQUESTID = LOAN_REQ_ID 
        AND AR.IRELATIONSTATUSID = 4
        AND AR.IPUBLISH=1
        AND AM.IPUBLISH = 1)T1
        ORDER BY T1.DPD DESC)T2
        WHERE ROWNUM=1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        GR1_EXIST := 0;
    END;    

    --guarantor 2
    BEGIN
    SELECT T2.ICUSTORMER_ID,T2.VOLDNIC,T2.ILOAN_MASTER_ID,T2.IID,T2.DPD
    INTO GR2_CUSID,GR2_NIC,GR2_LMID,GR2_APPID,GR2_DPD
        FROM(SELECT T1.ICUSTORMER_ID,T1.VOLDNIC,T1.ILOAN_MASTER_ID,T1.IID,T1.DPD
        FROM(SELECT C.ICUSTORMER_ID,AM.VOLDNIC,LM.ILOAN_MASTER_ID,AM.IID,NVL(D.IDPD,0) AS DPD
        FROM APPLICANT_RELATION AR
        INNER JOIN APPLICANT_MAIN AM ON AM.IID = AR.IAPPLICANTID
        LEFT OUTER JOIN CUSTOMER_INFO C ON C.VNIC = AM.VOLDNIC
        LEFT OUTER JOIN LOAN_MASTER LM ON LM.ICUSTORMER_ID = C.ICUSTORMER_ID
        LEFT OUTER JOIN TBL_DELINQUENCY D ON D.ILOANMASTER_ID = LM.ILOAN_MASTER_ID AND D.IACTIONED = 0 AND D.IDPD > 0
        WHERE AR.ILOANREQUESTID = LOAN_REQ_ID 
        AND AR.IRELATIONSTATUSID = 5
        AND AR.IPUBLISH=1
        AND AM.IPUBLISH = 1)T1
        ORDER BY T1.DPD DESC)T2
        WHERE ROWNUM=1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        GR2_EXIST := 0;
    END;   

    --guarantor 3
    BEGIN
    SELECT T2.ICUSTORMER_ID,T2.VOLDNIC,T2.ILOAN_MASTER_ID,T2.IID,T2.DPD
    INTO GR3_CUSID,GR3_NIC,GR3_LMID,GR3_APPID,GR3_DPD
        FROM(SELECT T1.ICUSTORMER_ID,T1.VOLDNIC,T1.ILOAN_MASTER_ID,T1.IID,T1.DPD
        FROM(SELECT C.ICUSTORMER_ID,AM.VOLDNIC,LM.ILOAN_MASTER_ID,AM.IID,NVL(D.IDPD,0) AS DPD
        FROM APPLICANT_RELATION AR
        INNER JOIN APPLICANT_MAIN AM ON AM.IID = AR.IAPPLICANTID
        LEFT OUTER JOIN CUSTOMER_INFO C ON C.VNIC = AM.VOLDNIC
        LEFT OUTER JOIN LOAN_MASTER LM ON LM.ICUSTORMER_ID = C.ICUSTORMER_ID
        LEFT OUTER JOIN TBL_DELINQUENCY D ON D.ILOANMASTER_ID = LM.ILOAN_MASTER_ID AND D.IACTIONED = 0 AND D.IDPD > 0
        WHERE AR.ILOANREQUESTID = LOAN_REQ_ID 
        AND AR.IRELATIONSTATUSID = 6
        AND AR.IPUBLISH=1
        AND AM.IPUBLISH = 1)T1
        ORDER BY T1.DPD DESC)T2
        WHERE ROWNUM=1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        GR3_EXIST := 0;
    END;    

    --guarantor 4
    BEGIN    
    SELECT T2.ICUSTORMER_ID,T2.VOLDNIC,T2.ILOAN_MASTER_ID,T2.IID,T2.DPD
    INTO GR4_CUSID,GR4_NIC,GR4_LMID,GR4_APPID,GR4_DPD
        FROM(SELECT T1.ICUSTORMER_ID,T1.VOLDNIC,T1.ILOAN_MASTER_ID,T1.IID,T1.DPD
        FROM(SELECT C.ICUSTORMER_ID,AM.VOLDNIC,LM.ILOAN_MASTER_ID,AM.IID,NVL(D.IDPD,0) AS DPD
        FROM APPLICANT_RELATION AR
        INNER JOIN APPLICANT_MAIN AM ON AM.IID = AR.IAPPLICANTID
        LEFT OUTER JOIN CUSTOMER_INFO C ON C.VNIC = AM.VOLDNIC
        LEFT OUTER JOIN LOAN_MASTER LM ON LM.ICUSTORMER_ID = C.ICUSTORMER_ID
        LEFT OUTER JOIN TBL_DELINQUENCY D ON D.ILOANMASTER_ID = LM.ILOAN_MASTER_ID AND D.IACTIONED = 0 AND D.IDPD > 0
        WHERE AR.ILOANREQUESTID = LOAN_REQ_ID 
        AND AR.IRELATIONSTATUSID = 7
        AND AR.IPUBLISH=1
        AND AM.IPUBLISH = 1)T1
        ORDER BY T1.DPD DESC)T2
        WHERE ROWNUM=1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        GR4_EXIST := 0;
    END;    

    --guarantor 5
    BEGIN    
    SELECT T2.ICUSTORMER_ID,T2.VOLDNIC,T2.ILOAN_MASTER_ID,T2.IID,T2.DPD
    INTO GR5_CUSID,GR5_NIC,GR5_LMID,GR5_APPID,GR5_DPD
        FROM(SELECT T1.ICUSTORMER_ID,T1.VOLDNIC,T1.ILOAN_MASTER_ID,T1.IID,T1.DPD
        FROM(SELECT C.ICUSTORMER_ID,AM.VOLDNIC,LM.ILOAN_MASTER_ID,AM.IID,NVL(D.IDPD,0) AS DPD
        FROM APPLICANT_RELATION AR
        INNER JOIN APPLICANT_MAIN AM ON AM.IID = AR.IAPPLICANTID
        LEFT OUTER JOIN CUSTOMER_INFO C ON C.VNIC = AM.VOLDNIC
        LEFT OUTER JOIN LOAN_MASTER LM ON LM.ICUSTORMER_ID = C.ICUSTORMER_ID
        LEFT OUTER JOIN TBL_DELINQUENCY D ON D.ILOANMASTER_ID = LM.ILOAN_MASTER_ID AND D.IACTIONED = 0 AND D.IDPD > 0
        WHERE AR.ILOANREQUESTID = LOAN_REQ_ID 
        AND AR.IRELATIONSTATUSID = 8
        AND AR.IPUBLISH=1
        AND AM.IPUBLISH = 1)T1
        ORDER BY T1.DPD DESC)T2
        WHERE ROWNUM=1;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        GR5_EXIST := 0;
    END;       

 ---BUSINESS_LOGIC_VALIDATIONS	

 IF M_RULE_STATUS = 'ACTIVE' THEN  
  IF REC_EXISTS = 'EXISTS' THEN
    FOR valid_sub_rules IN get_valid_sub_rules
     LOOP
        S_RULE_NAME := valid_sub_rules.VRULE_SUB_NAME;
        S_RULE_ID   := valid_sub_rules.IRULE_SUB_ID;
        --Rowsprocessed := Rowsprocessed+1;

        IF S_RULE_NAME = 'PRE_APPROVED' THEN
                Rowsprocessed := Rowsprocessed+1;
                S_RULE_NAME_DISPLAY := 'PRE_APPROVED';
                IF G_APP_STATUS IS NOT NULL THEN
                   IF (G_APP_STATUS = 'PRE_APPROVED') THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'PASS',M_RULE_ID,S_RULE_ID,NULL,NULL,'Green chaneel account is pre-approved',sysdate);

                   ELSE

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'FAIL',M_RULE_ID,S_RULE_ID,NULL,'ERR23','Green chaneel account is not pre-approved',sysdate);

                   END IF;
                ELSE

                 INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                 VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'NOT USED',M_RULE_ID,S_RULE_ID,NULL,'ERR16','Green chaneel account pre approval status is not exists',sysdate);   

                END IF;

         ELSIF S_RULE_NAME = 'LOAN_AMOUNT' THEN
                Rowsprocessed := Rowsprocessed+1;
                S_RULE_NAME_DISPLAY := 'LOAN_AMOUNT';

                IF O_REQ_AMOUNT IS NOT NULL THEN
                   IF (G_APP_AMOUNT >= O_REQ_AMOUNT) THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'PASS',M_RULE_ID,S_RULE_ID,NULL,NULL,'Requested loan amount is within the pre-approved amount',sysdate);

                   ELSE

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'FAIL',M_RULE_ID,S_RULE_ID,NULL,'ERR25','Requested loan amount is greater the pre-approved amount',sysdate);

                   END IF;
                ELSE

                 INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                 VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'NOT USED',M_RULE_ID,S_RULE_ID,NULL,'ERR16','Loan amount is not exists',sysdate);   

                END IF;

         ELSIF S_RULE_NAME = 'NIC' THEN
                Rowsprocessed := Rowsprocessed+1;
                S_RULE_NAME_DISPLAY := 'NIC';

                IF G_NIC_NEW IS NOT NULL THEN
                   IF (G_NIC_NEW = O_NIC_OLD OR G_NIC_NEW = O_NIC_NEW) THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'PASS',M_RULE_ID,S_RULE_ID,NULL,NULL,'Green channel and provided NIC is matching',sysdate);

                   ELSE

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'FAIL',M_RULE_ID,S_RULE_ID,NULL,'ERR26','Green channel and provided NIC is not matching',sysdate);

                   END IF;
                ELSE

                 INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                 VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'NOT USED',M_RULE_ID,S_RULE_ID,NULL,'ERR16','Green chaneel NIC is not exists',sysdate);   

                END IF;

         ELSIF S_RULE_NAME = 'DELINQUENT_LOANS' THEN
                Rowsprocessed := Rowsprocessed+1;
                S_RULE_NAME_DISPLAY := 'DELINQUENT_LOANS';


                   IF (G_DPD <= 0) THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'PASS',M_RULE_ID,S_RULE_ID,NULL,NULL,'No ongoing delinquent loans',sysdate);

                   ELSE

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'FAIL',M_RULE_ID,S_RULE_ID,NULL,'ERR24','Ongoing delinquent loan is available',sysdate);

                   END IF;  

         ELSIF S_RULE_NAME = 'TOP-UP ELIGIBILITY' THEN
                Rowsprocessed := Rowsprocessed+1;
                S_RULE_NAME_DISPLAY := 'TOP-UP ELIGIBILITY';

                IF O_TOPUP IS NOT NULL THEN
                   IF (O_TOPUP = 'Y') THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'PASS',M_RULE_ID,S_RULE_ID,NULL,NULL,'Top-up allowed',sysdate);

                   ELSE

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'FAIL',M_RULE_ID,S_RULE_ID,NULL,'ERR23','Top-up not allowed',sysdate);

                   END IF;
                ELSE

                 INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                 VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'NOT USED',M_RULE_ID,S_RULE_ID,NULL,'ERR16','Top-up detail is not available',sysdate);   

                END IF; 

         ELSIF S_RULE_NAME = 'GUARANTOR_IN_ARREARS' THEN
                Rowsprocessed := Rowsprocessed+1;
                S_RULE_NAME_DISPLAY := 'GUARANTOR_IN_ARREARS';

                IF O_PRODUCT = 1 THEN
                   IF (GR1_EXIST = 0 AND GR2_EXIST = 0 AND GR3_EXIST = 0 AND GR4_EXIST = 0 AND GR5_EXIST = 0) THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'NOT USED',M_RULE_ID,S_RULE_ID,NULL,NULL,'No guarators are avilable for this group loan',sysdate);

                   ELSIF (GR1_DPD = 0 AND GR2_DPD = 0 AND GR3_DPD = 0 AND GR4_DPD = 0 AND GR5_DPD = 0) THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'PASS',M_RULE_ID,S_RULE_ID,NULL,NULL,'Gurantors own facilities are not in arrears',sysdate);

                   ELSE

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'FAIL',M_RULE_ID,S_RULE_ID,NULL,'ERR10','Gurantors own facilities are in arrears',sysdate);

                   END IF;
                ELSE

                   IF (GR1_EXIST = 0 AND GR2_EXIST = 0 AND GR3_EXIST = 0 AND GR4_EXIST = 0 AND GR5_EXIST = 0) THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'NOT EXISTS',M_RULE_ID,S_RULE_ID,NULL,NULL,'Guarator details are not avilable',sysdate);

                   ELSIF (GR1_DPD = 0 AND GR2_DPD = 0 AND GR3_DPD = 0 AND GR4_DPD = 0 AND GR5_DPD = 0) THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'PASS',M_RULE_ID,S_RULE_ID,NULL,NULL,'Gurantors own facilities are not in arrears',sysdate);

                   ELSE

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'FAIL',M_RULE_ID,S_RULE_ID,NULL,'ERR10','Gurantors own facilities are in arrears',sysdate);

                   END IF;
                END IF;

         ELSIF S_RULE_NAME = 'SPOUSE_OWN_FACILITIES' THEN
                Rowsprocessed := Rowsprocessed+1;
                S_RULE_NAME_DISPLAY := 'SPOUSE_OWN_FACILITIES';

                IF SP_EXIST = 1 THEN
                   IF (SP_BAL <= 0) THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'PASS',M_RULE_ID,S_RULE_ID,NULL,NULL,'No faiclitiy balances are available for spouse',sysdate);

                   ELSE

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'FAIL',M_RULE_ID,S_RULE_ID,NULL,'ERR23','Previous faiclitiy balances are available',sysdate);

                   END IF;
                ELSE

                 INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                 VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'NOT USED',M_RULE_ID,S_RULE_ID,NULL,'ERR16','Spouse details are not available',sysdate);   

                END IF;                

         ELSIF S_RULE_NAME = 'MAX_LOAN_AMOUNT' THEN
                Rowsprocessed := Rowsprocessed+1;
                S_RULE_NAME_DISPLAY := 'CRM_APPROVED_AMOUNT';

                IF O_REQ_AMOUNT IS NOT NULL THEN
                   IF (O_REQ_AMOUNT > 200000 AND G_GREEN_CHANNEL_ID IS NOT NULL) THEN

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'FAIL',M_RULE_ID,S_RULE_ID,NULL,'ERR25','Requested loan amount is greater the max amount defined',sysdate);

                   ELSE

                   INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
                   VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'PASS',M_RULE_ID,S_RULE_ID,NULL,NULL,'Requested loan amount is within the max amount defined',sysdate);

                   END IF;
                ELSE

                 INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE)
                 VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,Rowsprocessed,S_RULE_NAME_DISPLAY,'NOT EXISTS',M_RULE_ID,S_RULE_ID,NULL,'ERR16','Loan amount is not exists',sysdate);   

                END IF;                

         END IF;

        COMMIT;
     END LOOP;  
    ELSE
     INSERT INTO XDP_T_VALIDATION_STATUS(IVALIDATION_SEQ,ILOAN_ID,IAPPLICANT_ID,IRESULT_ID,VVALIDATION_TYPE,VSTATUS,IMASTER_RULE_ID,ISUB_RULE_ID,VCATEGORY,VERROR_CODE,VDESCRIPTION,DCREATED_DATE) 
     VALUES(var_ProcessStatusID,LOAN_REQ_ID,APPLICANT_ID,1,'CUST_BUSINESS_LOGIC_VALIDATE','NOT EXISTS',M_RULE_ID,NULL,NULL,'ERR16','Green channel account informations are not available',sysdate);
     COMMIT;
  END IF;

 END IF;

 record_history := 'G_NIC_NEW = '||G_NIC_NEW||', G_NIC_OLD = '||G_NIC_OLD||', O_NIC_NEW = '||O_NIC_NEW||', O_NIC_OLD = '||O_NIC_OLD
                    ||', G_APP_STATUS = '||G_APP_STATUS||', G_APP_AMOUNT = '||G_APP_AMOUNT||', O_REQ_AMOUNT = '||O_REQ_AMOUNT
                    ||', G_DPD = '||G_DPD||', O_TOPUP = '||O_TOPUP||', O_PRODUCT = '||O_PRODUCT||', O_HEARDFROM = '||O_HEARDFROM
                    ||', SP_CUSID = '||SP_CUSID||', SP_NIC = '||SP_NIC||', SP_LMID = '||SP_LMID||', SP_APPID = '||SP_APPID||', SP_BAL = '||SP_BAL||', SP_EXIST = '||SP_EXIST
                    ||', GR1_CUSID = '||GR1_CUSID||', GR1_NIC = '||GR1_NIC||', GR1_LMID = '||GR1_LMID||', GR1_APPID = '||GR1_APPID||', GR1_DPD = '||GR1_DPD||', GR1_EXIST = '||GR1_EXIST
                    ||', GR2_CUSID = '||GR2_CUSID||', GR2_NIC = '||GR2_NIC||', GR2_LMID = '||GR2_LMID||', GR2_APPID = '||GR2_APPID||', GR2_DPD = '||GR2_DPD||', GR2_EXIST = '||GR2_EXIST                    
                    ||', GR3_CUSID = '||GR3_CUSID||', GR3_NIC = '||GR3_NIC||', GR3_LMID = '||GR3_LMID||', GR3_APPID = '||GR3_APPID||', GR3_DPD = '||GR3_DPD||', GR3_EXIST = '||GR3_EXIST
                    ||', GR4_CUSID = '||GR4_CUSID||', GR4_NIC = '||GR4_NIC||', GR4_LMID = '||GR4_LMID||', GR4_APPID = '||GR4_APPID||', GR4_DPD = '||GR4_DPD||', GR4_EXIST = '||GR4_EXIST
                    ||', GR5_CUSID = '||GR5_CUSID||', GR5_NIC = '||GR5_NIC||', GR5_LMID = '||GR5_LMID||', GR5_APPID = '||GR5_APPID||', GR5_DPD = '||GR5_DPD||', GR5_EXIST = '||GR5_EXIST;

 INSERT INTO TBL_BUSI_RULE_VALIDATE_HISTORY(IVALIDATION_SEQ,ILOAN_ID,VNIC,RELATION,VVALIDATION_TYPE,VRECORD_HISTORY,DCREATED_DATE) 
 VALUES(var_ProcessStatusID,LOAN_REQ_ID,O_NIC_OLD,1,'CUST_BUSINESS_LOGIC_VALIDATE',record_history,SYSDATE);
 COMMIT;

   EXCEPTION
    WHEN OTHERS THEN
    var_ErrorMessage := SUBSTR(SQLERRM, 1, 500);
            INSERT INTO tbl_xdp_error_log_db(logid, 
                                          itemname, 
                                          error_message, 
                                          postdatetime)
            VALUES( seq_xdp_error_log_db.NEXTVAL,
                    'Green channel information validation Stored Procedure XDP_P_CUST_BUSI_LOGIC_VALIDATE',
                    DBMS_UTILITY.FORMAT_ERROR_BACKTRACE()||' - '||var_ErrorMessage,
                    sysdate);  

 END;

   /*BEGIN
    SELECT DISTINCT 2
    INTO STATUS_FAIL
    FROM xdp_t_validation_status
    WHERE VSTATUS = 'FAIL'
    AND IVALIDATION_SEQ = var_ProcessStatusID;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        STATUS_FAIL := 0;
    END;*/

  BEGIN
    SELECT DISTINCT 2
    INTO STATUS_FAIL
    FROM xdp_t_validation_status
    WHERE VSTATUS IN ('FAIL','NOT EXISTS')
    AND IVALIDATION_SEQ = var_ProcessStatusID;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        STATUS_FAIL := 0;
    END;

  BEGIN
    SELECT DISTINCT 1
    INTO STATUS_PASS
    FROM xdp_t_validation_status
    WHERE VSTATUS IN ('PASS','NOT USED')
    AND IVALIDATION_SEQ = var_ProcessStatusID;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        STATUS_PASS := 0;
    END;


    IF STATUS_FAIL = 2 THEN
        STATUS := 2;
    ELSIF STATUS_PASS = 1 THEN
        STATUS := 1;
    ELSE
        STATUS := 1;
    END IF;

 VALIDATION_SEQ_ID := var_ProcessStatusID;
 FINAL_STATUS := STATUS;
END;